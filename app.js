// app.js ‚Äî —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è HabitCraft AI
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –∂–¥–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Telegram WebApp –∏ DOM –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
import { CONFIG } from './config.js';
import StorageManager from './modules/storage.js';
import HabitManager from './modules/habit-manager.js';
import AICoach from './modules/ai-coach.js';
import UIEngine from './modules/ui-engine.js';

class HabitCraftApp {
    constructor() {
        this.initialized = false;
    }

    async init() {
        await this.waitForDOM();

        // Telegram WebApp ready
        await this.initTelegram();

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
        this.storage = new StorageManager();
        this.habitManager = new HabitManager();
        this.aiCoach = new AICoach();
        this.ui = new UIEngine(this.habitManager, this.aiCoach);

        // –ó–∞–ø—É—Å–∫ UI
        this.ui.init();
        this.initialized = true;

        console.log('‚úÖ HabitCraft AI –∑–∞–ø—É—â–µ–Ω');
    }

    waitForDOM() {
        return new Promise((resolve) => {
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', resolve);
            } else {
                resolve();
            }
        });
    }

    async initTelegram() {
        return new Promise((resolve) => {
            try {
                if (typeof Telegram !== 'undefined' && Telegram.WebApp) {
                    Telegram.WebApp.ready();
                    Telegram.WebApp.expand();

                    const theme = Telegram.WebApp.colorScheme || CONFIG.DEFAULT_THEME;
                    document.documentElement.setAttribute('data-theme', theme);
                    console.log('ü§ñ Telegram WebApp –≥–æ—Ç–æ–≤, —Ç–µ–º–∞:', theme);
                } else {
                    console.log('–ó–∞–ø—É—Å–∫ –≤–Ω–µ Telegram WebApp (–±—Ä–∞—É–∑–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º)');
                }
            } catch (err) {
                console.warn('–û—à–∏–±–∫–∞ Telegram WebApp init', err);
            } finally {
                resolve();
            }
        });
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
const app = new HabitCraftApp();
app.init().catch(console.error);

export default app;